# Prototyp-Setup: Kafka (KRaft), Kafka-UI, InfluxDB 2.x, Grafana
# Sicherheit minimal (bewusst), dafür schnell startklar.

services:
  kafka:
    image: bitnami/kafka:3.7
    container_name: kafka
    restart: unless-stopped
    environment:
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      # Drei Listener: intern, Controller, extern
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=false
      - KAFKA_CFG_LOG_DIRS=/bitnami/kafka/data
      - KAFKA_KRAFT_CLUSTER_ID=UrU6hcr7RweVMfsIDhhCXw   # <- deine bestehende ID
    ports:
      - "9092:9092"   # für andere Container / Kafka-UI
      - "9094:9094"   # für deinen lokalen Producer
    volumes:
      - kafka_data:/bitnami/kafka
    healthcheck:
      test: ["CMD", "bash", "-lc", "echo > /dev/tcp/localhost/9092"]
      interval: 10s
      timeout: 5s
      retries: 15

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    restart: unless-stopped
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
    ports:
      - '8080:8080'
    depends_on:
      kafka:
        condition: service_healthy

  influxdb:
    image: influxdb:2
    container_name: influxdb
    restart: unless-stopped
    ports:
      - '8086:8086'
    environment:
      # Initial-Setup (läuft nur, wenn Volume leer ist)
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=${INFLUX_USER}
      - DOCKER_INFLUXDB_INIT_PASSWORD=${INFLUX_PASSWORD}
      - DOCKER_INFLUXDB_INIT_ORG=${INFLUX_ORG}
      - DOCKER_INFLUXDB_INIT_BUCKET=${INFLUX_BUCKET}
      - DOCKER_INFLUXDB_INIT_RETENTION=${INFLUX_RETENTION}
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=${INFLUX_TOKEN}
    volumes:
      - influx_data:/var/lib/influxdb2
    healthcheck:
      test:
        [
          'CMD',
          'bash',
          '-lc',
          "wget -qO- http://localhost:8086/health | grep -q 'pass'",
        ]
      interval: 10s
      timeout: 5s
      retries: 20

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    ports:
      - '3000:3000'
    environment:
      # Prototyp: einfache Standard-Creds
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      # (Optional) Default Influx-DS via provisioning könntest du später ergänzen
    depends_on:
      influxdb:
        condition: service_healthy
    volumes:
      - grafana_data:/var/lib/grafana

volumes:
  kafka_data:
  influx_data:
  grafana_data:
